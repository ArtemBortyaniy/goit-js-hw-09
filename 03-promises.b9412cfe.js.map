{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,OAASC,SAASC,cAAc,WAwC7BF,OAAOG,iBAAiB,UAE7B,SAAqBC,GACnBA,EAAMC,iBAEN,IAAMC,EAAQF,EAAMG,OAAOD,MAAME,MAC3BC,EAAOL,EAAMG,OAAOE,KAAKD,MACzBE,EAASN,EAAMG,OAAOI,OAAOH,MAI7BI,EA3BR,SAAwBC,GAGtB,IAFA,IAAMC,EAAU,GAERC,EAAI,EAAGA,GAAKF,EAAGE,GAAK,EAC1BD,EAAQE,KAAKD,GAGf,OAAOD,C,CAkBWG,CAAcC,OAAOR,IAEZS,KAAI,SAAAR,G,OAhDjC,SAAuBS,EAAUd,EAAOK,GACtC,IAAMU,EAAgBC,KAAKC,SAAW,GACtCH,EAAWF,OAAOE,GAClBd,EAAQY,OAAOZ,GACf,IAAIkB,EAAS,EAcb,OAZAV,QAAU,IAAIW,SAAQ,SAACC,EAASC,GAC9BC,YAAY,WACVR,GAAYd,EACZkB,GAAU,EACLH,EACDK,EAAQ,uBAAsCG,OAAbL,EAAO,QAAeK,OAATT,EAAS,OAErDO,EAAK,sBAAmCE,OAAbL,EAAO,QAAeK,OAATT,EAAS,M,GAEpDA,E,IAGAN,O,CA8BkCgB,CAAcxB,EAAOG,E,IAE9DsB,QAAQC,IAAIpB,GAnBQqB,EAqBRrB,EApBLa,QAAQS,IAAID,GAClBE,MAAK,SAAAC,G,OAAcC,EAAAvC,GAASwC,OAAOC,QAAQH,E,IAC3CI,OAAM,SAAAC,G,OAAaJ,EAAAvC,GAASwC,OAAOI,QAAQD,E,IAH9C,IAAsBR,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl : document.querySelector('.form'),\n}\n\nfunction createPromise(position, delay, amount) {\n  const shouldResolve = Math.random() > 0.3;\n  position = Number(position);\n  delay = Number(delay);\n  let number = 0;\n  \n  promise = new Promise((resolve, reject) => {\n    setTimeout (() => {\n      position += delay;\n      number += 1;\n        if(shouldResolve) {\n          resolve(`✅ Fulfilled promise ${number} in ${position}ms`);\n        } else {\n          reject(`❌ Rejected promise ${number} in ${position}ms`);\n        }\n      }, position);\n    });\n    \n  return promise;\n}\n\nfunction amountPromise (n) {\n  const promise = [];\n\n  for(let i = 1; i <= n; i += 1) {\n    promise.push(i);\n  }\n\n  return promise;\n}\n\nfunction logPromises (promiseArr) {\n  return Promise.all(promiseArr)\n  .then(logResolve => Notiflix.Notify.success(logResolve))\n  .catch(logReject => Notiflix.Notify.failure(logReject));\n}\n\nrefs.formEl.addEventListener('submit', submitForm);\n\nfunction submitForm (event) {\n  event.preventDefault();\n  \n  const delay = event.target.delay.value;\n  const step = event.target.step.value\n  const amount = event.target.amount.value;\n\n  const amountNum = amountPromise(Number(amount))\n\n  const promises = amountNum.map(amount => createPromise(delay, step, amount));\n\n  console.log(promises);\n\n  logPromises(promises);\n}"],"names":["$6JpON","parcelRequire","formEl","document","querySelector","addEventListener","event","preventDefault","delay","target","value","step","amount1","amount","promises","n","promise","i","push","$ce04d3a99e08e73b$var$amountPromise","Number","map","position","shouldResolve","Math","random","number","Promise","resolve","reject","setTimeout","concat","$ce04d3a99e08e73b$var$createPromise","console","log","promiseArr","all","then","logResolve","$parcel$interopDefault","Notify","success","catch","logReject","failure"],"version":3,"file":"03-promises.b9412cfe.js.map"}